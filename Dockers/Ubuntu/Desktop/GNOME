# Images ------------------------------------------------------
FROM pikachuim/ubuntu:22.04-server
# Install -----------------------------------------------------
RUN apt-get install -y software-properties-common             \
&&  apt-get update && DEBIAN_FRONTEND=noninteractive          \
    apt install -y gnome git cmake                               

# Install Xserver ---------------------------------------------
RUN apt-get update && DEBIAN_FRONTEND=noninteractive          \
    apt install -y xserver-xorg-core-hwe-18.04 xauth          \
                   xserver-xorg-video-dummy curl net-tools    \   
                   xfonts-base xfonts-75dpi xfonts-100dpi     \
                   xfonts-scalable dbus-user-session          \
                   dbus-x11 xinit neofetch                                  
COPY Config/x11server/xorg.conf /usr/share/X11/xorg.conf.d/
COPY Config/x11server/create-pulse-clientconf.sh              \
     /etc/profile.d/
COPY Config/x11server/70-ubuntu.conf                          \
     /etc/lightdm/lightdm.conf.d/
RUN echo 'load-module module-native-protocol-unix '           \
    >> /etc/pulse/default.pa                                  \
&&  echo 'auth-anonymous=1 socket=/tmp/pulse-socket'          \
    >> /etc/pulse/default.pa

# Install OpenVGL----------------------------------------------
COPY AppImg/virtualgl_amd64.deb /
RUN apt update && DEBIAN_FRONTEND=noninteractive              \
    apt install -y libvdpau1 mesa-vdpau-drivers libegl1-mesa  \
                   libglu1-mesa                 
RUN dpkg -i virtualgl_amd64.deb                               \
&&  rm virtualgl_amd64.deb                                    \
&&  echo 'XAUTHORITY=$HOME/.Xauthority.docker' >              \
         /etc/profile.d/Xauthority-fix.sh                     \
&&  ENV_1='export LD_PRELOAD=/usr/lib/libdlfaker.so:'         \
&&  ENV_2='/usr/lib/libvglfaker.so:$LD_PRELOAD'               \
&&  echo '${ENV_1}${ENV_2}' > /etc/profile.d/virtualgl.sh     \
&&  sed -i 's/use-ssh-agent/no-use-ssh-agent/'                \
        /etc/X11/Xsession.options

# Install Nomachine -------------------------------------------
COPY AppImg/nomachine_amd64.deb /
RUN dpkg -i /nomachine_amd64.deb && rm /nomachine_amd64.deb   \
&&  sed -i '$a PhysicalDesktopAuthorization 0'                \
    /usr/NX/etc/node.cfg                                      \
&&  sed -i '$a WaylandModes "egl,compositor,drm"'             \
    /usr/NX/etc/node.cfg
                   
# Install Softwares -------------------------------------------
RUN apt install -y software-properties-common fcitx           \                
                   apt-transport-https wget                   \
                   kwrite vlc transmission-qt                 \
                   gimp gwenview fonts-liberation libu2f-udev
# Chrome and VSCode -------------------------------------------
RUN wget -q https://packages.microsoft.com/keys/microsoft.asc \
    -O- | sudo apt-key add -                                  \
&&  TEXT1="deb [arch=amd64] https://packages.microsoft.com/"  \
&&  TEXT2="repos/vscode stable main"                          \
&&  add-apt-repository "${TEXT1}${TEXT2}"                     \
&&  LINK1="https://dl.google.com/linux/direct/"               \
&&  LINK2="google-chrome-stable_current_amd64.deb"            \
&&  wget "${LINK1}${LINK2}"                                   
RUN dpkg -i google-chrome-stable_current_amd64.deb            \
&&  rm google-chrome-stable_current_amd64.deb                 \
&&  apt install -y code                                       
# QQ ----------------------------------------------------------
#COPY AppImg/linuxqq_2.0.0.deb /
#RUN dpkg -i linuxqq_2.0.0.deb &&  rm linuxqq_2.0.0.deb                   
COPY AppImg/linuxqq_3.1.0.deb /
RUN dpkg -i linuxqq_3.1.0.deb &&  rm linuxqq_3.1.0.deb   
                      
# Desktop Configs ----------------------------------------------------

# Start UP -----------------------------------------------------------
RUN echo '#!/bin/bash' > /run.sh                                     \
&&  echo 'export DISPLAY=:0' >> /run.sh                              \
&&  echo 'echo Starting Dbus ---------------------------' >> /run.sh \
&&  echo '/etc/init.d/dbus start' >> /run.sh                         \
&&  echo 'echo Starting NX -----------------------------' >> /run.sh \
&&  echo '/etc/NX/nxserver --startup' >> /run.sh                     \
&&  echo '/etc/NX/nxserver --restart ' >> /run.sh                    \
# SSH & DESKTOP -----------------------------------------------------\
&&  echo 'echo Starting SSHD ---------------------------' >> /run.sh \
&&  echo '/usr/sbin/sshd' >> /run.sh                                 \
&&  echo 'echo Start Desktop ---------------------------' >> /run.sh \
&&  echo 'xinit /bin/gnome-sessions' >> /run.sh             \
&&  echo '/usr/sbin/sshd -D' >> /run.sh                        

# Port Mapping -------------------------------------------------------
EXPOSE 4000/tcp
CMD ["/run.sh"]
